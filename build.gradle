//
// eb4j gradle build script.
//
// Copyright (c) 2016 Hiroshi Miura
//
//

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctorj-diagram:1.3.1'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    }
}

// Here is only place where plugins {} can be located.
plugins {
    // github
    id "co.riiid.gradle" version "0.4.2"
    // bintray
    id "com.jfrog.bintray" version "1.6"
    // Publish to gh-pages
    id 'org.ajoberstar.github-pages' version '1.1.0'
    // AsciiDoc
    id 'org.asciidoctor.gradle.asciidoctor' version '1.5.1'
    id 'org.asciidoctor.convert' version '1.5.3'
}

// Release Management
apply from: "$rootDir/gradle/github.gradle"
apply from: "$rootDir/gradle/bintray.gradle"
apply from: "$rootDir/gradle/ghpages.gradle"

// common settings
subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    // Java version set in gradle.properties
    sourceCompatibility = jdkVersion
    targetCompatibility = jdkVersion
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    [compileJava, compileTestJava]*.options*.bootClasspath = "$JDK_HOME/jre/lib/rt.jar"

    // Quality managements
    apply plugin: 'jacoco'
    apply from: "$rootDir/gradle/integration-test.gradle"
    apply from: "$rootDir/gradle/checkstyle.gradle"
    apply from: "$rootDir/gradle/findbugs.gradle"

    repositories {
        jcenter()
    }

    // Use testNG for unit test.
    dependencies {
        testCompile 'org.testng:testng:6.9.10'
    }
    test.useTestNG()

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    // Always JavaDoc in English.
    javadoc.options.locale = 'en_US'
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourceJar
        archives javadocJar
    }
}

project(':eb4j-core') {
  version = projectVersion
  group = projectGroup
  bintray {
      user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
      key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
      configurations = ['archives']
      pkg {
          repo = 'maven'
          name = 'eb4j-core'
          licenses = ['LGPL-2.1']
          vcsUrl = projectUrl
          labels = ['java','EPWING', 'ebook']
          publicDownloadNumbers = true
      }
  }

  apply from: "$rootDir/gradle/provided-compile.gradle"

  dependencies {
    compile 'commons-lang:commons-lang:2.4',
            'org.slf4j:slf4j-api:1.5.10'
    provided 'org.slf4j:slf4j-nop:1.5.10'
  }

}

project(':eb4j-tools') {
  apply plugin: 'application'
  mainClassName = 'io.github.eb4j.tool.EBZip'
  applicationName = 'ebzip'

  task createAllStartScripts() << {/* just a place holder. */}
  def scripts = [ 'ebdump': 'io.github.eb4j.tool.EBDump',
                  'ebinfo':'io.github.eb4j.tool.EBInfo'
  ]
  scripts.each() { scriptName, className ->
        def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
            mainClassName = className
            applicationName = scriptName
            outputDir = new File(project.buildDir, 'scripts')
            classpath = jar.outputs.files + project.configurations.runtime
        }
      applicationDistribution.into("bin") {
          from(t)
          fileMode = 0755
      }
      createAllStartScripts.dependsOn(t)
  }

  dependencies {
    compile project(':eb4j-core'),
        'commons-cli:commons-cli:1.2'
    testCompile 'tokyo.northside:northside-io:0.2.0'
  }
  version = projectVersion
  group = projectGroup
  bintray {
      user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
      key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
      configurations = ['archives']
      pkg {
          repo = 'maven'
          name = 'eb4j-tools'
          licenses = ['LGPL-2.1']
          vcsUrl = projectUrl
          labels = ['java','EPWING', 'ebook']
          publicDownloadNumbers = true
      }
  }

  distTar {
    compression = Compression.GZIP
  }

    distributions.main {
        baseName = 'eb4j-tools'
        contents {
            from(javadocJar) {
                into 'docs'
            }
            from(sourceJar) {
                into 'source'
            }
        }
    }
}

// Configure GPG singing.
if (gradle.startParameter.taskNames.contains('bintrayUpload')  ||
    gradle.startParameter.taskNames.contains('githubRelease')) {
        apply from: "$rootDir/gradle/build.publish.gradle"
}
